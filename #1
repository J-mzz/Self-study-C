class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> = m;
        for(int i=0; i < nums.size;i++){
            if(m.find[target-nums{i}] != m.end())     //find if there is a number in map that ...
                return {m[target-nums[i]],i};         //if yes, return index in map and nums, which are m[target-nums[i]] and i respectively
            m[nums[i]] = i;                           //if no, pair the value and index in map
        }
    }
};
